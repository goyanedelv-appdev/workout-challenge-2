<form id="regForm" action="">

  <h1>New Challenge!</h1>

  <!-- One "tab" for each step in the form: -->
  <div class="tab">Name:
    <p><input placeholder="First name..." oninput="this.className = ''"></p>
    <p><input placeholder="Last name..." oninput="this.className = ''"></p>
  </div>

  <div class="tab">Contact Info:
    <p><input placeholder="E-mail..." oninput="this.className = ''"></p>
    <p><input placeholder="Phone..." oninput="this.className = ''"></p>
  </div>

  <div class="tab">Birthday:
    <p><input placeholder="dd" oninput="this.className = ''"></p>
    <p><input placeholder="mm" oninput="this.className = ''"></p>
    <p><input placeholder="yyyy" oninput="this.className = ''"></p>
  </div>

  <div class="tab">Login Info:
    <p><input placeholder="Username..." oninput="this.className = ''"></p>
    <p><input placeholder="Password..." oninput="this.className = ''"></p>
  </div>

  <div style="overflow:auto;">
    <div style="float:right;">
      <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
      <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
    </div>
  </div>

  <!-- Circles which indicates the steps of the form: -->
  <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
  </div>

</form>

<!-- Insert a challenge
  <div>
    <h2>
      Add a new challenge
    </h2>

    <form action="/insert_challenge" method="post">
      <div>
        <label for="starting_time_box">
          Starting time
        </label>

        <input type="datetime-local" id="starting_time_box" name="query_starting_time">
      </div>

      <div>
        <label for="ending_time_box">
          Ending time
        </label>

        <input type="text" id="ending_time_box" name="query_ending_time">
      </div>

      <div>
        <label for="challenge_name_box">
          Challenge name
        </label>

        <input type="text" id="challenge_name_box" name="query_challenge_name">
      </div>

      <div>
        <label for="challenge_image_box">
          Challenge image
        </label>

        <input type="text" id="challenge_image_box" name="query_challenge_image">
      </div>

      <div>
        <label for="removal_policy_box">
          Removal policy
        </label>

        <input type="text" id="removal_policy_box" name="query_removal_policy">
      </div>

      <div>
        <label for="new_user_policy_box">
          New user policy
        </label>

        <input type="text" id="new_user_policy_box" name="query_new_user_policy">
      </div>

      <div>
        <label for="penalty_policy_box">
          Penalty policy
        </label>

        <input type="text" id="penalty_policy_box" name="query_penalty_policy">
      </div>

      <div>
        <label for="workout_perday_policy_box">
          Workout perday policy
        </label>

        <input type="text" id="workout_perday_policy_box" name="query_workout_perday_policy">
      </div>

      <div>
        <label for="workout_criteria_box">
          Workout criteria
        </label>

        <input type="text" id="workout_criteria_box" name="query_workout_criteria">
      </div>

      <div>
        <label for="prize_policy_box">
          Prize policy
        </label>

        <textarea id="prize_policy_box" name="query_prize_policy" rows="3"></textarea>
      </div>

      <div>
        <label for="challenge_handle_box">
          Challenge handle
        </label>

        <input type="text" id="challenge_handle_box" name="query_challenge_handle">
      </div>

      <div>
        <label for="number_of_teams_box">
          Number of teams
        </label>

        <input type="text" id="number_of_teams_box" name="query_number_of_teams">
      </div>

      <div>
        <label for="challenge_type_box">
          Challenge type
        </label>

        <input type="text" id="challenge_type_box" name="query_challenge_type">
      </div>

      <button>
        Create challenge
      </button>
    </form>
  </div>
</div>
-->


<script>
  var currentTab = 0; // Current tab is set to be the first tab (0)
  showTab(currentTab); // Display the current tab

  function showTab(n) {
    // This function will display the specified tab of the form...
    var x = document.getElementsByClassName("tab");
    x[n].style.display = "block";
    //... and fix the Previous/Next buttons:
    if (n == 0) {
      document.getElementById("prevBtn").style.display = "none";
    } else {
      document.getElementById("prevBtn").style.display = "inline";
    }
    if (n == (x.length - 1)) {
      document.getElementById("nextBtn").innerHTML = "Submit";
    } else {
      document.getElementById("nextBtn").innerHTML = "Next";
    }
    //... and run a function that will display the correct step indicator:
    fixStepIndicator(n)
  }

  function nextPrev(n) {
    // This function will figure out which tab to display
    var x = document.getElementsByClassName("tab");
    // Exit the function if any field in the current tab is invalid:
    if (n == 1 && !validateForm()) return false;
    // Hide the current tab:
    x[currentTab].style.display = "none";
    // Increase or decrease the current tab by 1:
    currentTab = currentTab + n;
    // if you have reached the end of the form...
    if (currentTab >= x.length) {
      // ... the form gets submitted:
      document.getElementById("regForm").submit();
      return false;
    }
    // Otherwise, display the correct tab:
    showTab(currentTab);
  }

  function validateForm() {
    // This function deals with validation of the form fields
    var x, y, i, valid = true;
    x = document.getElementsByClassName("tab");
    y = x[currentTab].getElementsByTagName("input");
    // A loop that checks every input field in the current tab:
    for (i = 0; i < y.length; i++) {
      // If a field is empty...
      if (y[i].value == "") {
        // add an "invalid" class to the field:
        y[i].className += " invalid";
        // and set the current valid status to false
        valid = false;
      }
    }
    // If the valid status is true, mark the step as finished and valid:
    if (valid) {
      document.getElementsByClassName("step")[currentTab].className += " finish";
    }
    return valid; // return the valid status
  }

  function fixStepIndicator(n) {
    // This function removes the "active" class of all steps...
    var i, x = document.getElementsByClassName("step");
    for (i = 0; i < x.length; i++) {
      x[i].className = x[i].className.replace(" active", "");
    }
    //... and adds the "active" class on the current step:
    x[n].className += " active";
  }
</script>